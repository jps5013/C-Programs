#include <stdio.h>
#include <cs50.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>


int main(int argc, string argv[])
{
    // initiziling command line key at first entry post ./program
    
    int key = atoi(argv[1]);    
    /** condition for when user doesn't comply b/c 
     *  count must be 2 if user is compliant
     */
    if(argc != 2 || key < 0)
    {
        printf("You F'd Up\n");
        return 1;
    }
    else
    {
        // printf("Give me your bag\n");
        string plaintext = GetString();
        string cipher = NULL; 
        // why cant I just declare string cipher;
        // and then define it later?
        
              
        for(int i = 0, n = strlen(plaintext); i < n ;i++)
        {
            if(isalpha(plaintext[i]))
            {
                if(islower(plaintext[i]))
                {                          
                    cipher[i] =((plaintext[i] - 97) + key) % 26;
                    printf("%c", cipher[i]);  
                    /** why not good? say plaintext[i] = h
                     * 104 - 97 = 7, which is where i want
                     * h to be if lowercase alphabet starts
                     * at a = 0. if key is 1, 7 + 1 % 26 = 8 or i.
                     **/
                     
                }
                else if(isupper(plaintext[i]))         
                {
                    cipher[i] =((plaintext[i] - 65) + key) % 26;
                    printf("%c", cipher[i]);   
                }
                /*                  * 
                 * ex h = 104 k = 1 and i = 0. 104 +105%26.. 104 + 1 = 105 = i
                 *but every iteration the gap increases by one...
                 * ex h = 104 k = 27 and i = 0 104 + 131 % 26.. 104 + 1 =105 = i 
                 *but every iteration the gap increases by one...
                 */
            }        
            else
            {
                printf("%c",plaintext[i]);
            }
        }
        printf("\n");    
    }
    return 0; 
}


    
    
    
    
