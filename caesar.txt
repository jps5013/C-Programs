#include <stdio.h>
#include <cs50.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>


int main(int argc, string argv[])
{
    // handling if user does not comply
    // and enters > 1 argument
    
    if(argc != 2)
    {
        printf("You've been a very bad boy!\n");
        return 1;
    }
    
    /** ensuring that argv[1] has a value in it
     *  before declaring what the value is?
     *  why can't I declare atoi key first?
     *  argv[] is a char* and below is saying 
     *  if the value in the memory slot of argv[1] is greater than 0, then proceed. is this ok
     *  because chars and ints are interchangeable, so that is why the comparison to int 0 works?
     *  I do not understand why this is necessary as opposed to declaring key earlier as I had before.
     **/
    else if(argv[1] >= 0)
    {
        int key = atoi(argv[1]);
        // printf("Give me your bag\n");
        string plaintext = GetString();
        // char cipher[strlen(plaintext)]; 
        // why can I just declare string cipher;
        // and then define it later?
        
              
        for(int i = 0, n = strlen(plaintext); i < n ;i++)
        {
            if(isalpha(plaintext[i]))
            {
                if(islower(plaintext[i]))
                {    
                    char cipher =((plaintext[i] - 97) + key) % 26 + 97;
                    printf("%c", cipher);                     
                }
                else if(isupper(plaintext[i]))         
                {
                    char cipher =((plaintext[i] - 65) + key) % 26 + 65;
                    printf("%c", cipher);   
                }
            }        
            else
            {
                printf("%c",plaintext[i]);
            }
        }
        printf("\n");    
    }
    return 0; 
}


    

    
    
    
    
